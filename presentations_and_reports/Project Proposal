Project Proposal:

The Problem: How do companies extract meaningful information from overall online customer review statistics for goods/services when reviews are so positively skewed and so biased to being strongly positive or strongly negative? It is well-known that a 3/5 average rating does not mean the good/service is 'average', it is likely to be one of the lower-rated goods/services on th review site.

The Solution: Investigate the typical online reviews distribution for a good/service. Once it is known what a 'bad', 'normal', and 'exceptional' review distribution for a good/serivce looks like, the distribution for any individual good/service can be compared to the universe online-reviewed goods/services to determine whether ustomrs ar more or less satisfied than with an average good/service.



Background:
-Online reviews exhibit high levels of polarity and imbalance
-Characterized by J-shaped distributions
-Prior research has focused on overall review distribution characteristics for a review source (website) 



Data:


Data Processing:
-In jupyter notebooks, thorough explaination there.


Analysis:
Do all of these at the 25+ reviews/product level, 50+ reviews/product level, and 100+ reviews/product level.
Idea is to use the smallest reviews/product cutoff that still gives good, clean results.
**Average rating (product level): mean, median, st. dev, and a histogram.
**Individual star categories (product level): mean, median, box plot.
Look at these to determine which cutoff level is most appropriate
Then, for that chosen cutoff level, create my scoring metric.

How to decide what size review-set is needed for a product to accurately use my tool?
I am thinking randomly sample from a 'typical' product that has many many reviews. See what kind of sizes result in samples that are mostly similar to the product it is drawn from.
This will determine the cutoff level I use to create my scoring metric.


steps:
transform data into usable format
generate average product rating distribution, allows us to tell where a product average rating ranks relative to the universe of products.
test how robust that distribution is.
figure out how many reviews a product needs before its average rating conveys significant amount of information. 
complete data analysis for project results, including important visualizations and cumulative frequency distribution for overall product average ratings.
-----Where I am
build tool in python to tell user info for a set of amazon reviews for a product.

Potentially process Yelp data and compare the results for Yelp to the results for Amazon. 





Result:
Product:
Future Work:
-Do it for new data. Customer behavior and the universe of customers has probably changed a lot in the last 7 years with the growth of online retail, and amazon in particular. 
-See if the results can be generalizd to other sites that inorporte reviews of products/services, In particular Yelp. Yelp is the Amazon of business reviews, and shares a great dataset publically for academic purposes.


Note: In prsentation, when showing how my tool works, be careful to be in the correct working directory.